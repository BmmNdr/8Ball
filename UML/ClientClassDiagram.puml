@startuml ClientClass

class GameClient {
    - clientSocket: Socket
    - out: PrintWriter
    - in: BufferedReader
    - GUI: GUI

    + GameClient(GUI) throws IOException
    + receiveGameState(String) throws IOException
    + sendPlayerMove(String): void
    + close(): void
    + receiveTurn(String): void
}

class GUI {
    - balls: List<CBall>
    - button: JButton
    - textField: JTextField
    - offScreenImageDrawed: Image
    - offScreenGraphicsDrawed: Graphics
    - ballImages: Image[]
    - cueImage: Image
    - ballTypeLabel: JLabel

    + GUI()
    + updateCue(Cue): void
    + updateBalls(List<CBall>): void
    + paint(Graphics): void
    + renderOffScreen(Graphics): void
    + getButton(): JButton
    + getPlayerMove(): String
    + updateBallType(String): void
}

class CBall {
    - number: int
    - x: int
    - y: int

    + CBall(int, int, int)
    + getNumber(): int
    + getX(): int
    + getY(): int
}

class Cue {
    - angle: double
    - power: int

    + Cue()
    + getAngle(): double
    + setAngle(double): void
    + getPower(): int
    + setPower(int): void
}

class CConstants {
    + ballDiameter: int
    + potDiameter: int
    + tableWidth: int
    + tableHeight: int
    + widthOffset: int
    + heightOffset: int

    + getRadius(): int
}

class app {
    + main(String[]): void
}

GameClient --> GUI: Contains
GameClient --> CBall: Uses
GameClient --> Cue: Uses
GameClient --> CConstants: Uses

GUI --> CBall: Contains
GUI --> Cue: Contains
GUI --> CConstants: Uses

Cue --> CConstants: Uses

app --> GameClient: Uses

@enduml
